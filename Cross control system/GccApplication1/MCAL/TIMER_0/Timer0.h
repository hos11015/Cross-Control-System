/*
 * Timer0.h
 *
 * Created: 12/09/2022 12:55:18
 *  Author: HOSSAM MOSTAFA
 */ 


#ifndef TIMER0_H_
#define TIMER0_H_

#include "STD.h"
#include "BIT_MATH.h"
#include "REG.h"
#include "avr/interrupt.h"
#include "DIO.h"
#include "Timer0_cfg.h"
void(* g_Timer0_OVF_Call_Back)(void) ;
void(* g_Timer0_CTC_Call_Back)(void) ;

void(* g_Timer2_OVF_Call_Back)(void) ;
void(* g_Timer2_CTC_Call_Back)(void) ;

//////////////////////////////////////////////			///////////////////////////////////////////////////
/////////////////////////////////////////////// Timer 0 ///////////////////////////////////////////////////
//////////////////////////////////////////////			///////////////////////////////////////////////////
/************** Timer 0 Mode *********************/
#define TIMER0_NORMAL_MODE				0 
#define	TIMER0_CTC_MODE					1
#define TIMER0_FAST_PWM_MODE			2
#define TIMER0_PHASE_CORRECT_PWM_MODE   3
/************* Timer 0 Prescaler **********************/
#define	TIMER0_STOP						0
#define	TIMER0_NO_PRESCALER				1
#define	TIMER0_PRESCALER_8				2
#define	TIMER0_PRESCALER_64				3
#define	TIMER0_PRESCALER_256			4
#define	TIMER0_PRESCALER_1024			5
#define	TIMER0_EX_CLK_FALL_EDGE			6
#define	TIMER0_EX_CLK_RISE_EDGE			7

/************ Timer 0 OC0 OUTPUT Mode **********************/
#define  TIMER0_INVERTING_MODE			0
#define  TIMER0_NON_INVERTING_MODE		1

//////////////////////////////////////////////			///////////////////////////////////////////////////
/////////////////////////////////////////////// Timer 2 ///////////////////////////////////////////////////
//////////////////////////////////////////////			///////////////////////////////////////////////////

/************** Timer 2 Mode *********************/
#define TIMER2_NORMAL_MODE				0
#define	TIMER2_CTC_MODE					1
#define TIMER2_FAST_PWM_MODE			2
#define TIMER2_PHASE_CORRECT_PWM_MODE   3
/************* Timer 2 Prescaler **********************/
#define	TIMER2_STOP						0
#define	TIMER2_NO_PRESCALER				1
#define	TIMER2_PRESCALER_8				2
#define	TIMER2_PRESCALER_32				3
#define	TIMER2_PRESCALER_64				4
#define	TIMER2_PRESCALER_128			5
#define	TIMER2_PRESCALER_256			6
#define TIMER2_PRESCALER_1024			7

/************ Timer 2 OC2 OUTPUT Mode **********************/
#define  TIMER2_INVERTING_MODE			0
#define  TIMER2_NON_INVERTING_MODE		1

/***************************************************************************/

/***************** Prototypes *********************/

////////////////////////////////////////////////////////////////
/***************************************************************
*FUNCTION NAME : M_Timer0Init
*
* // Init the Timer 0 Mode of operation
*
******************************************************************/
void M_Timer0Init(void);
///////////////////////////////////////////////////////////////////


////////////////////////////////////////////////////////////////
/***************************************************************
*FUNCTION NAME : M_Timer0SetTime
*
* // set the time required to count
*
******************************************************************/
void M_Timer0SetTime(u32 l_Time_Req);
////////////////////////////////////////////////////////////////


////////////////////////////////////////////////////////////////
/***************************************************************
*FUNCTION NAME : M_Timer0Start
*
* // set the prescaler and enable the timer 0 int
*
******************************************************************/
void M_Timer0Start(void);
////////////////////////////////////////////////////////////////


////////////////////////////////////////////////////////////////
/***************************************************************
*FUNCTION NAME : M_Timer0Stop
*
* // stop counting and disable the timer 0 int
*
******************************************************************/
void M_Timer0Stop(void);
////////////////////////////////////////////////////////////////


////////////////////////////////////////////////////////////////
/***************************************************************
*FUNCTION NAME : M_Timer0OVFInt
*
* // set the action happen when OVF Int 
*
******************************************************************/
void M_Timer0OVFInt(void (*Timer0_OVF_Call_Back)(void));
////////////////////////////////////////////////////////////////


////////////////////////////////////////////////////////////////
/***************************************************************
*FUNCTION NAME : M_Timer0PWMInit
*
* // Make Timer 0 act in PWM mode
*
******************************************************************/
void M_Timer0PWMInit(void);
////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////
/***************************************************************
*FUNCTION NAME : M_Timer0PWMStart
*
* // Set duty cycle of the pwm signal
*
******************************************************************/
void M_Timer0PWMStart(u8 u8_duty_cycle);

/************************		  **************************/
/************************ Timer 2 **************************/
/************************		  **************************/

////////////////////////////////////////////////////////////////
/***************************************************************
*FUNCTION NAME : M_Timer2Init
*
* // Init the Timer 2 Mode of operation
*
******************************************************************/
void M_Timer2Init(void);
////////////////////////////////////////////////////////////////


////////////////////////////////////////////////////////////////
/***************************************************************
*FUNCTION NAME : M_Timer2SetTime
*
* // set the time required to take an action
*
******************************************************************/
void M_Timer2SetTime(u32 l_Time_Req);
////////////////////////////////////////////////////////////////


////////////////////////////////////////////////////////////////
/***************************************************************
*FUNCTION NAME : M_Timer2Start
*
* // set the prescaler and enable the timer 2 int
*
******************************************************************/
void M_Timer2Start(void);
////////////////////////////////////////////////////////////////
 
 
////////////////////////////////////////////////////////////////
/***************************************************************
*FUNCTION NAME : M_Timer2OVFInt
*
* // set the action happen when OVF Int
*
******************************************************************/
void M_Timer2OVFInt(void (*Timer2_OVF_Call_Back)(void));
////////////////////////////////////////////////////////////////


////////////////////////////////////////////////////////////////
/***************************************************************
*FUNCTION NAME : M_Timer2PWMInit
*
* // Make Timer 2 act in PWM mode
*
******************************************************************/
void M_Timer2PWMInit(void);
////////////////////////////////////////////////////////////////


////////////////////////////////////////////////////////////////
/***************************************************************
*FUNCTION NAME : M_Timer2PWMStart
*
* // Set duty cycle of the pwm signal
*
******************************************************************/
void M_Timer2PWMStart(u8 u8_duty_cycle);


#endif /* TIMER0_H_ */